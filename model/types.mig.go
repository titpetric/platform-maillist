package model

// Code generated by go-bridget/mig. DO NOT EDIT.

import (
	"time"
)

// Maillist generated for db table `maillist`.
//
// Table containing mailing list definitions.
type Maillist struct {
	// ULID identifier for the mailing list
	ID string `db:"id"`

	// Human-readable name of the mailing list
	Name string `db:"name"`

	// URL-friendly identifier for subscription links
	Slug string `db:"slug"`

	// Optional description of the mailing list
	Description string `db:"description"`

	// Timestamp when the mailing list was created
	CreatedAt *time.Time `db:"created_at"`

	// Timestamp when the mailing list was last updated
	UpdatedAt *time.Time `db:"updated_at"`
}

// GetID will return the value of ID.
func (m *Maillist) GetID() string { return m.ID }

// GetName will return the value of Name.
func (m *Maillist) GetName() string { return m.Name }

// GetSlug will return the value of Slug.
func (m *Maillist) GetSlug() string { return m.Slug }

// GetDescription will return the value of Description.
func (m *Maillist) GetDescription() string { return m.Description }

// GetCreatedAt will return the value of CreatedAt.
func (m *Maillist) GetCreatedAt() *time.Time { return m.CreatedAt }

// SetCreatedAt sets CreatedAt to the provided value.
func (m *Maillist) SetCreatedAt(stamp time.Time) { m.CreatedAt = &stamp }

// GetUpdatedAt will return the value of UpdatedAt.
func (m *Maillist) GetUpdatedAt() *time.Time { return m.UpdatedAt }

// SetUpdatedAt sets UpdatedAt to the provided value.
func (m *Maillist) SetUpdatedAt(stamp time.Time) { m.UpdatedAt = &stamp }

// MaillistTable is the name of the table in the DB.
const MaillistTable = "`maillist`"

// MaillistFields is a list of all columns in the DB table.
var MaillistFields = []string{"id", "name", "slug", "description", "created_at", "updated_at"}

// MaillistPrimaryFields are the primary key fields in the DB table.
var MaillistPrimaryFields = []string{"id"}

// MaillistCampaign generated for db table `maillist_campaign`.
//
// Table containing email campaigns for mailing lists.
type MaillistCampaign struct {
	// ULID identifier for the campaign
	ID string `db:"id"`

	// ULID of the mailing list this campaign belongs to
	MaillistID string `db:"maillist_id"`

	// Email subject line
	Subject string `db:"subject"`

	// Content of the email message
	Body string `db:"body"`

	// Current status of the campaign
	Status string `db:"status"`

	// Optional timestamp when the campaign is scheduled to be sent
	ScheduledAt *time.Time `db:"scheduled_at"`

	// Timestamp when the campaign was actually sent
	SentAt *time.Time `db:"sent_at"`

	// Timestamp when the campaign was created
	CreatedAt *time.Time `db:"created_at"`

	// Timestamp when the campaign was last updated
	UpdatedAt *time.Time `db:"updated_at"`
}

// GetID will return the value of ID.
func (m *MaillistCampaign) GetID() string { return m.ID }

// GetMaillistID will return the value of MaillistID.
func (m *MaillistCampaign) GetMaillistID() string { return m.MaillistID }

// GetSubject will return the value of Subject.
func (m *MaillistCampaign) GetSubject() string { return m.Subject }

// GetBody will return the value of Body.
func (m *MaillistCampaign) GetBody() string { return m.Body }

// GetStatus will return the value of Status.
func (m *MaillistCampaign) GetStatus() string { return m.Status }

// GetScheduledAt will return the value of ScheduledAt.
func (m *MaillistCampaign) GetScheduledAt() *time.Time { return m.ScheduledAt }

// SetScheduledAt sets ScheduledAt to the provided value.
func (m *MaillistCampaign) SetScheduledAt(stamp time.Time) { m.ScheduledAt = &stamp }

// GetSentAt will return the value of SentAt.
func (m *MaillistCampaign) GetSentAt() *time.Time { return m.SentAt }

// SetSentAt sets SentAt to the provided value.
func (m *MaillistCampaign) SetSentAt(stamp time.Time) { m.SentAt = &stamp }

// GetCreatedAt will return the value of CreatedAt.
func (m *MaillistCampaign) GetCreatedAt() *time.Time { return m.CreatedAt }

// SetCreatedAt sets CreatedAt to the provided value.
func (m *MaillistCampaign) SetCreatedAt(stamp time.Time) { m.CreatedAt = &stamp }

// GetUpdatedAt will return the value of UpdatedAt.
func (m *MaillistCampaign) GetUpdatedAt() *time.Time { return m.UpdatedAt }

// SetUpdatedAt sets UpdatedAt to the provided value.
func (m *MaillistCampaign) SetUpdatedAt(stamp time.Time) { m.UpdatedAt = &stamp }

// MaillistCampaignTable is the name of the table in the DB.
const MaillistCampaignTable = "`maillist_campaign`"

// MaillistCampaignFields is a list of all columns in the DB table.
var MaillistCampaignFields = []string{"id", "maillist_id", "subject", "body", "status", "scheduled_at", "sent_at", "created_at", "updated_at"}

// MaillistCampaignPrimaryFields are the primary key fields in the DB table.
var MaillistCampaignPrimaryFields = []string{"id"}

// MaillistMember generated for db table `maillist_member`.
//
// Table containing subscribers for mailing lists.
type MaillistMember struct {
	// ULID identifier for the member record
	ID string `db:"id"`

	// ULID of the mailing list this member is subscribed to
	MaillistID string `db:"maillist_id"`

	// Email address of the subscriber
	Email string `db:"email"`

	// Optional name of the subscriber
	Name string `db:"name"`

	// Timestamp when the subscriber joined the list
	SubscribedAt *time.Time `db:"subscribed_at"`

	// Timestamp when the subscriber unsubscribed, if applicable
	UnsubscribedAt *time.Time `db:"unsubscribed_at"`

	// Optional source of subscription (HTML snippet, API, etc.)
	Source string `db:"source"`
}

// GetID will return the value of ID.
func (m *MaillistMember) GetID() string { return m.ID }

// GetMaillistID will return the value of MaillistID.
func (m *MaillistMember) GetMaillistID() string { return m.MaillistID }

// GetEmail will return the value of Email.
func (m *MaillistMember) GetEmail() string { return m.Email }

// GetName will return the value of Name.
func (m *MaillistMember) GetName() string { return m.Name }

// GetSubscribedAt will return the value of SubscribedAt.
func (m *MaillistMember) GetSubscribedAt() *time.Time { return m.SubscribedAt }

// SetSubscribedAt sets SubscribedAt to the provided value.
func (m *MaillistMember) SetSubscribedAt(stamp time.Time) { m.SubscribedAt = &stamp }

// GetUnsubscribedAt will return the value of UnsubscribedAt.
func (m *MaillistMember) GetUnsubscribedAt() *time.Time { return m.UnsubscribedAt }

// SetUnsubscribedAt sets UnsubscribedAt to the provided value.
func (m *MaillistMember) SetUnsubscribedAt(stamp time.Time) { m.UnsubscribedAt = &stamp }

// GetSource will return the value of Source.
func (m *MaillistMember) GetSource() string { return m.Source }

// MaillistMemberTable is the name of the table in the DB.
const MaillistMemberTable = "`maillist_member`"

// MaillistMemberFields is a list of all columns in the DB table.
var MaillistMemberFields = []string{"id", "maillist_id", "email", "name", "subscribed_at", "unsubscribed_at", "source"}

// MaillistMemberPrimaryFields are the primary key fields in the DB table.
var MaillistMemberPrimaryFields = []string{"id"}

// MaillistMemberActivity generated for db table `maillist_member_activity`.
//
// Table recording activity of mailing list members.
type MaillistMemberActivity struct {
	// ULID identifier for the activity record
	ID string `db:"id"`

	// ULID of the member performing the activity
	MaillistMemberID string `db:"maillist_member_id"`

	// ULID of the campaign related to this activity
	CampaignID string `db:"campaign_id"`

	// Type of activity
	ActivityType string `db:"activity_type"`

	// Timestamp of the activity
	ActivityAt *time.Time `db:"activity_at"`
}

// GetID will return the value of ID.
func (m *MaillistMemberActivity) GetID() string { return m.ID }

// GetMaillistMemberID will return the value of MaillistMemberID.
func (m *MaillistMemberActivity) GetMaillistMemberID() string { return m.MaillistMemberID }

// GetCampaignID will return the value of CampaignID.
func (m *MaillistMemberActivity) GetCampaignID() string { return m.CampaignID }

// GetActivityType will return the value of ActivityType.
func (m *MaillistMemberActivity) GetActivityType() string { return m.ActivityType }

// GetActivityAt will return the value of ActivityAt.
func (m *MaillistMemberActivity) GetActivityAt() *time.Time { return m.ActivityAt }

// SetActivityAt sets ActivityAt to the provided value.
func (m *MaillistMemberActivity) SetActivityAt(stamp time.Time) { m.ActivityAt = &stamp }

// MaillistMemberActivityTable is the name of the table in the DB.
const MaillistMemberActivityTable = "`maillist_member_activity`"

// MaillistMemberActivityFields is a list of all columns in the DB table.
var MaillistMemberActivityFields = []string{"id", "maillist_member_id", "campaign_id", "activity_type", "activity_at"}

// MaillistMemberActivityPrimaryFields are the primary key fields in the DB table.
var MaillistMemberActivityPrimaryFields = []string{"id"}

// Migrations generated for db table `migrations`.
//
// Migration log of applied migrations.
type Migrations struct {
	// Microservice or project name
	Project string `db:"project"`

	// yyyy-mm-dd-HHMMSS.sql
	Filename string `db:"filename"`

	// Statement number from SQL file
	StatementIndex int32 `db:"statement_index"`

	// ok or full error message
	Status string `db:"status"`
}

// GetProject will return the value of Project.
func (m *Migrations) GetProject() string { return m.Project }

// GetFilename will return the value of Filename.
func (m *Migrations) GetFilename() string { return m.Filename }

// GetStatementIndex will return the value of StatementIndex.
func (m *Migrations) GetStatementIndex() int32 { return m.StatementIndex }

// GetStatus will return the value of Status.
func (m *Migrations) GetStatus() string { return m.Status }

// MigrationsTable is the name of the table in the DB.
const MigrationsTable = "`migrations`"

// MigrationsFields is a list of all columns in the DB table.
var MigrationsFields = []string{"project", "filename", "statement_index", "status"}

// MigrationsPrimaryFields are the primary key fields in the DB table.
var MigrationsPrimaryFields = []string{"project", "filename"}
